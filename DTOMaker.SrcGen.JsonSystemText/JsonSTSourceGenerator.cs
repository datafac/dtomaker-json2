using DTOMaker.SrcGen.Core;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;

namespace DTOMaker.SrcGen.JsonSystemText
{

    [Generator]
    public sealed class JsonSTSourceGenerator : SourceGeneratorBase
    {
        protected override void OnBeginInitialize(IncrementalGeneratorInitializationContext context)
        {
        }
        protected override void OnEndInitialize(IncrementalGeneratorInitializationContext context, IncrementalValuesProvider<MarkedInterface> markedInterfaces)
        {
            // generate entities
            context.RegisterSourceOutput(markedInterfaces, (spc, intf) =>
            {
                // todo move to derived class
                var sb = new StringBuilder();
                sb.AppendLine("// <auto-generated/>");
                sb.AppendLine($"// Namespace: {intf.NameSpace}");
                sb.AppendLine($"// Name     : {intf.ImplName}");
                sb.AppendLine($"// Id       : {intf.EntityId}");
                sb.AppendLine($"// Members  : {intf.Values.Count}");
                string hintName = $"{intf.NameSpace}.JsonSystemText.{intf.ImplName}.g.cs";
                spc.AddSource(hintName, SourceText.From(sb.ToString(), Encoding.UTF8));
            });

        }
    }
}
